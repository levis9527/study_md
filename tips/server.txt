#sh脚本第一行必须声明脚本类型
所有sh脚本第一行必须加#!/bin/sh
尤其是自动启动脚本，这是一个大坑，也是自己太不小心的原因，linux需要知道你调用什么解释器去解释你的脚本

查看文件夹内文件大小
du -h --max-depth=1 /home


nginx   代理后端修改cookie
proxy_cookie_path /two/ /
实际上就是把set cookie信息里面path字段替换，第一个参数是原来的set cookie信息，后一个是你需要修改成的path信息，可以全匹配也可以正则
但是必须能匹配上，比如原始set cookie是path=/aaa， 那么配置就应该是proxy_cookie_path /aaa /; 而不是/aaa/ /;(重点)


docker启动镜像时有个restart参数，可以设置为always保证stop容器后马上重启一个新的容器，对于需要保证可靠性的系统很重要，类似于开机重启重启
docker ps -a列出所有的容器列表，docker images列出镜像列表，想学习docker必须完全理解镜像与容器的关系以及区别，很多人会搞混，在hub拉取的
是镜像，通过docker images查看，然后通过docker run创建一个容器并且启动，创建后可以通过docker ps 查看，如果停止后可以通过docker ps -a查看
状态并且通过docker start重新启动，不需要再根据镜像创建并启动

docker run常用参数
-a STDIN/STDOUT/STDERR 指定输出内容类型
-d 后台运行
-i 交互模式运行，一般和t一起使用-it，交互模式运行并指定一个终端
-P 容器内部暴露的端口随机匹配一个主机端口
-p 指定端口映射，格式 主机端口:容器端口
--name 为容器指定一个名称
-h 指定容器的hostname
-e 设置环境变量
--env-file=[] 从指定文件读取环境变量
-m 容器使用内存的最大值
--link=[]添加链接到另一个容器
--expose=[]开放一个或者一组端口
-v和--volume 绑定目录 格式 主机文件(夹):容器文件(夹):ro 
关于挂载文件
1.ro表示文件只读，在容器内不能修改该文件
2.可以挂载多个文件文件夹，通过多个-v参数挂载
3.可以通过--volumes-from 容器名 挂载容器中数据，可以用来让容器共享数据
4.docker不会在容器被删除后自动删除数据卷，可以通过docker volume ls 查看所有数据卷

出现意外win7没法连接上容器的docker
使用docker-machine env default显示命令，然后copy显示的命令在cmd中粘贴，一般是网卡等问题，要重新设置环境变量



对于ssh免密登录，可以把配置写在./ssh/config中，可以简化部分操作，格式如下
Host com
    
    HostName 192.168.181.128
    
    User root
登录就可以直接使用ssh com登录了


linux useradd命令
-c comment给用户添加备注
-d home_dir指定用户目录，默认为/home/username
-e expire_date指定账户过期日期格式YYYY-MM-DD
-f inactive_days指定账户密码过期后多久被禁用，0表示马上，-1表示不禁用
-g initial_group指定用户登录组的gid或者组名
-G group ...指定用户登录组之外所属的另外的附加组
-k 必须和-m一起使用，将/etc/skel目录的内容复制到用户home目录
-m 创建用户home目录
-M 不创建用户home目录（当默认设置里指定创建时才用到）
-n 创建一个同用户登录名的新组
-r 创建系统账户
-p passwd为账户指定密码
-s shell指定用户的默认shell
-u uid指定唯一的uid
删除用户使用-r可以删除home目录以及mail目录，但是必须特别小最新使用